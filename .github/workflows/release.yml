name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

  crate-publish:
    name: Crate Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions-rs/cargo@v1
        run: cargo publish --all-features --token ${{ secrets.CRATE_REGISTRY_TOKEN }}

  linux-release:
    name: Build on Linux
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        run: cargo build --release --all-features
      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/release/ones-manhour-record-alert
          asset_name: ones-manhour-record-alert-${{ steps.get_version.outputs.VERSION }}-linux-amd64

  macos-release:
    name: Build on MacOS
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        - name: Build
          uses: actions-rs/cargo@v1
          run: cargo build --release --all-features
      - name: Upload assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/release/ones-manhour-record-alert
            asset_name: ones-manhour-record-alert-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
